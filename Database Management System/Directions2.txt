Each task is worth 6 points.  You may refer to Oracle Notes Part Two for help with this assignment.  Do NOT use join or any other binary operations; instead, use sub-queries wherever needed.  Do not use more than one query for a task.  Do not display columns that are not required in the result.

Run your queries in ssh Secure Shell terminal.  Create a spool file to capture the results of queries for tasks 1 through 5.  Turn in a hard copy of your spool file in class on Oct. 9 and email your queries (NOT QUERY RESULTS) to mswamina@email.uark.edu with the subject line "DBMS Assignment Two".  The queries must appear in clean text (without any unnecessary characters) in the body of the email, NOT in an ATTACHED FILE.  Also make sure to add your name in the email.

Please check with me if you need further clarification on any of the following tasks.

Tasks:

Assume that, if the P_ID value for a book is null in the Books table, the book is currently in the library.  Else, the book has been checked out by the corresponding patron.
select * from books;
Select * from authors;
Select * from patrons;
Select * from books_authors;

1.  Find and print the total number of books checked out and total price of those books.  DONE
select count(id), sum(price) from books where p_id is not null;

2.  Show names and phone numbers of patrons who have not checked out any book at present. DONE
select name, phone from patrons where id not in (select p_id from books where p_id is not null);

3.  For the books that cost more than $100 and have been checked out, print the corresponding patron names.  DONE
select name from patrons where id in (select P_id from books where p_id is not null and price >= 100);

select name from patrons p, books b where b.price >= 100 AND b.p_id = p.id;

4.  There may be patrons who have checked out books but we do not have their telephone numbers in our database.  Print their names.  Done
select name from patrons where id in (select p_id from books where p_id is not null) and phone is null;

select name from patrons p, books b where p.id = b.p_id and p.phone is null;

5.  Show the name(s) of author(s) of the most expensive book?  DONE
select a.name from authors a where a.a_id in (select ba.a_id from books_authors ba where ba.b_id in (select id from books where price = (select max(price) from books)));

select a.name from authors a, books b, books_authors ba where a.a_id = ba.a_id and ba.b_id = b.id and b.price = (select max(price) from books);